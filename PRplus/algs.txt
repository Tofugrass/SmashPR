data objects that need to be stored in each session

ArrayList<Tournament> tournaments = new ArrayList<Tournament>();
ArrayList<Player> players = new ArrayList<Player>();
ArrayList<Player> manualTournamentResults = new ArrayList<Player>();
ArrayList<Match> includedMatches = new ArrayList<Match>();
ArrayList<Match> excludedMatches = new ArrayList<Match>();
ArrayList<TournamentPlacings> includedPlacings = new ArrayList<TournamentPlacings>();
ArrayList<TournamentPlacings> excludedPlacings = new ArrayList<TournamentPlacings>();
SortablePlayerList pr = new SortablePlayerList(players, 2);

we must exclude every match and every placing, then remove the tournament and new players. 

	protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		
		//PROGRAM FLOW:
		//0 we redirect the user if the form isn't filled out
		//1 initialize all objects
		//2 if any of them are null, we will create a new one
		//3 import the standings and matches
		//4 update the session objects
		//return the user back to the original page


		//0 we redirect the user if the form isn't filled out	

		
		Methods method = new Methods();
		// */	
		//1 initialize all objects we need, these are the players, matches, tournaments and standings
		HttpSession session = request.getSession();
		ArrayList<Player> players = method.getSessionPlayers(session);
		
		
		
		ArrayList<Match> includedMatches = method.getSessionIncludedMatches(session);
		ArrayList<Match> excludedMatches = method.getSessionExcludedMatches(session);
		ArrayList<Tournament> tournaments = method.getSessionTournaments(session);
		ArrayList<TournamentPlacings> includedPlacings = method.getSessionIncludedPlacings(session);
		ArrayList<TournamentPlacings> excludedPlacings = method.getSessionExcludedPlacings(session);
		
		method.alertAndRedirectError("Coming soon", request, response);
		return;
		
		request.setAttribute("displayData", true);
					request.setAttribute("playerData", returnString);
					method.alertAndRedirect("Tournament added successfully", request, response);
<script>
    onload = function () {
       var url = document.getElementById('url');
       url.oninput = CreateSmashGGParams;
       url.onpropertychange = url.oninput; // for IE8
       // e.onchange = e.oninput; // FF needs this in <select><option>...
       // other things for onload()
    };
</script>
								<script>
function CreateSmashGGParams()
{
	 var url = document.getElementById('url');
	 var val = url.value;
	 var game_wrapper = document.getElementById('game-wrapper');
	 if(val.indexOf("smash.gg") !== -1)
		 game_wrapper.setAttribute("style", "display:block");
	 else
		 game_wrapper.setAttribute("style", "display:none");
};
</script>
								<script type="text/javascript">
		function CheckGame(game)
{
	 var game_wrapper = document.getElementById('game-wrapper');
	 var style = window.getComputedStyle(game_wrapper).display;
	 if(style !== 'none'){
		if(game.indexOf("Select") !== -1){	
			document.getElementById('my-input-id').disabled = true;
		 }
		 else{
		 	document.getElementById('my-input-id').disabled = false;
		 }
	 }
};
</script>
		
